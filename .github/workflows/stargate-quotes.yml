name: Stargate Quotes Hourly Collector

on:
  schedule:
    - cron: '0 * * * *' # Every hour at minute 0 (UTC)
  workflow_dispatch:
    inputs:
      start_utc:
        description: "Start time (UTC, ISO8601 e.g. 2025-01-01T00:00:00Z)"
        required: false
      end_utc:
        description: "End time (UTC, ISO8601 e.g. 2025-01-03T00:00:00Z)"
        required: false

# Edit these to your desired 2-day window (UTC)
env:
    START_ISO_UTC: "2025-08-25T13:00:00Z"
    END_ISO_UTC:   "2025-08-27T13:00:00Z"
    PYTHONUNBUFFERED: '1'

jobs:
  collect:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Check execution window (UTC)
        id: window
        env:
          START_OVERRIDE: ${{ inputs.start_utc }}
          END_OVERRIDE: ${{ inputs.end_utc }}
        run: |
          set -e
          # Accept inputs first, then fallback to START_UTC/END_UTC, and finally START_ISO_UTC/END_ISO_UTC
          S="${START_OVERRIDE:-${START_UTC:-$START_ISO_UTC}}"
          E="${END_OVERRIDE:-${END_UTC:-$END_ISO_UTC}}"
          echo "Start (UTC): $S"
          echo "End   (UTC): $E"

          NOW_EPOCH=$(date -u +%s)
          # Parse ISO8601 timestamps into epoch seconds
          START_EPOCH=$(date -u -d "$S" +%s || true)
          END_EPOCH=$(date -u -d "$E" +%s || true)

          if [ -z "$START_EPOCH" ] || [ -z "$END_EPOCH" ]; then
            echo "Invalid START/END format. Expected ISO8601 like 2025-01-01T00:00:00Z"
            echo "in_window=false" >> "$GITHUB_OUTPUT"
            exit 0
          fi

          echo "Now  (UTC): $(date -u --date=@$NOW_EPOCH '+%Y-%m-%dT%H:%M:%SZ')"
          if [ "$NOW_EPOCH" -lt "$START_EPOCH" ] || [ "$NOW_EPOCH" -ge "$END_EPOCH" ]; then
            echo "Outside window. Skipping this scheduled run."
            echo "in_window=false" >> "$GITHUB_OUTPUT"
            exit 0
          fi

          echo "Within window. Proceeding."
          echo "in_window=true" >> "$GITHUB_OUTPUT"

      - name: Set up Python
        if: steps.window.outputs.in_window == 'true'
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        if: steps.window.outputs.in_window == 'true'
        run: |
          python -m pip install --upgrade pip
          pip install requests pandas tqdm

      - name: Run stargate_quotes.py
        if: steps.window.outputs.in_window == 'true'
        run: |
          mkdir -p out
          python stargate_quotes.py --out-dir out

      - name: Upload CSV artifact
        if: steps.window.outputs.in_window == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: stargate-quotes-${{ github.run_id }}-${{ github.run_attempt }}
          path: out/*.csv
          if-no-files-found: error
          retention-days: 90


